[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://d2b3dt6dmoll6"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_dtwuj"]
frequency = 0.0155
fractal_gain = 1.045
fractal_weighted_strength = 0.86

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_0b3g3"]
seamless = true
noise = SubResource("FastNoiseLite_dtwuj")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5767w"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_0b3g3")

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_7aw3w"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_xfbd5"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_40ima"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_rvf11"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_a4a33"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_n37um"]
constant = 8.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2;
uniform vec4 ColorParameter : source_color;



void fragment() {
// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


	vec3 n_out4p0;
// ColorFunc:4
	{
		vec3 c = vec3(n_out2p0.xyz);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out4p0 = vec3(max2, max2, max2);
	}


// ColorParameter:7
	vec4 n_out7p0 = ColorParameter;


// VectorOp:5
	vec4 n_out5p0 = vec4(n_out4p0, 0.0) * n_out7p0;


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = vec3(n_out2p0.xyz);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out3p0 = vec3(max2, max2, max2);
	}


// FloatConstant:9
	float n_out9p0 = 8.000000;


// VectorOp:8
	vec4 n_out8p0 = n_out7p0 * vec4(n_out9p0);


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out3p0.x;
	EMISSION = vec3(n_out8p0.xyz);


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_5767w")
nodes/fragment/2/position = Vector2(-1160, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_7aw3w")
nodes/fragment/3/position = Vector2(-460, 500)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorFunc_xfbd5")
nodes/fragment/4/position = Vector2(-466.953, 320.752)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_40ima")
nodes/fragment/5/position = Vector2(-100, 20)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_rvf11")
nodes/fragment/7/position = Vector2(-1200, -120)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_a4a33")
nodes/fragment/8/position = Vector2(-120, 660)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatConstant_n37um")
nodes/fragment/9/position = Vector2(-517.799, 856.063)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 1, 2, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 0, 7, 0, 5, 1, 7, 0, 8, 0, 8, 0, 0, 5, 9, 0, 8, 1)
