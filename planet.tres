[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://b48yidcb023d1"]

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_88n16"]
parameter_name = "TextureParameterTriplanar"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wfhqs"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_2e6w4"]
constant = 1.0

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_irf52"]
constant = Color(0.00589948, 0.0195946, 0, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, world_vertex_coords;

uniform sampler2D TextureParameterTriplanar;


// TextureParameterTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;

void vertex() {
// TextureParameterTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
}

void fragment() {
// ColorConstant:9
	vec4 n_out9p0 = vec4(0.005899, 0.019595, 0.000000, 1.000000);


// TextureParameterTriplanar:10
	vec4 n_out10p0 = triplanar_texture(TextureParameterTriplanar, triplanar_power_normal, triplanar_pos);


// VectorOp:11
	vec4 n_out11p0 = n_out9p0 * n_out10p0;


// FloatConstant:3
	float n_out3p0 = 1.000000;


// Output:0
	ALBEDO = vec3(n_out11p0.xyz);
	ROUGHNESS = n_out3p0;


}
"
flags/world_vertex_coords = true
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_2e6w4")
nodes/fragment/3/position = Vector2(60, 460)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_irf52")
nodes/fragment/9/position = Vector2(-660, 140)
nodes/fragment/10/node = SubResource("VisualShaderNodeTextureParameterTriplanar_88n16")
nodes/fragment/10/position = Vector2(-660, 280)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_wfhqs")
nodes/fragment/11/position = Vector2(-60, 60)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 3, 9, 0, 11, 0, 10, 0, 11, 1, 11, 0, 0, 0)
